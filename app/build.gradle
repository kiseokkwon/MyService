import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.lge.testapp"
        minSdkVersion 28
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('keys/debug_platform.jks')
        }
        release {
            storeFile file('keys/debug_platform.jks')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "product"
    sourceSets {
        overlay {
            res.srcDirs = ['overlay/res']
        }
        wing {
            manifest.srcFile "src/main/AndroidManifest.xml"
        }
    }
    productFlavors {
        overlay {
            dimension "product"
            // ".overlay"
            //versionNameSuffix "-overlay"
        }
        wing {
            dimension "product"
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    aaptOptions {
        //additionalParameters "-I", "$rootDir/external-libs/lgapi_LAMPQR200304.jar"
    }
}

preBuild {
    doLast {
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            def imlFile = file(project.name + ".iml")
            println 'Change ' + project.name + '.iml order'
            try {
                def parsedXml = (new XmlParser()).parse(imlFile)
                def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
                parsedXml.component[1].remove(jdkNode)
                def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
                println 'what' + sdkString
                new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
                groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
            } catch (FileNotFoundException e) {
                // nop, iml not found
                println "no iml found"
            }
        }
    }
}

dependencies {
    compileOnly fileTree(dir: "$rootDir/external-libs", include: ['*.jar', '*.aar'])

    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation project(':sdk')
}
